{"version":3,"sources":["assets/img/remove24.svg","components/Circle/index.jsx","components/List/index.jsx","assets/img/plus24.svg","components/AddlistButton/index.jsx","assets/img/edit24p.svg","webpack:///./src/assets/img/plus24.svg?7b0b","components/Tasks/AddTaskForm.jsx","components/Tasks/Task.jsx","components/Tasks/index.jsx","assets/img/subject_black_24dp.svg","App.js","index.js"],"names":["Circle","color","onClick","className","classNames","List","items","isRemovable","onRemove","onClickItem","activeItem","map","item","index","active","id","icon","name","tasks","length","src","removeSvg","alt","window","confirm","axios","delete","then","removeList","AddListButton","colors","onAdd","useState","visiblePopup","setVisiblePopup","selectColor","setSelectColor","isLoading","setIsLoading","inputValue","setInputValue","useEffect","Array","isArray","onClose","addSvg","xmlns","height","viewBox","width","fill","d","value","onChange","e","target","type","placeholder","post","colorId","data","filter","c","listObj","hex","catch","alert","finally","AddTaskForm","list","onAddTask","visibleForm","setVisibleForm","toggleFormVisible","disabled","obj","listId","text","completed","Task","task","onEdit","onComplete","checked","htmlFor","editSvg","Tasks","onEditTitle","withOutEmpty","onRemoveTask","onEditTask","onCompleteTask","navigate","to","style","newTitle","prompt","patch","App","lists","setLists","setColors","setActiveItem","href","setHref","useNavigate","get","taskObj","newList","onEditListTitle","title","taskId","taskText","newTaskText","find","Number","listSvg","newLists","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.635bbfa3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/remove24.fea57046.svg\";","import React from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport './Circle.scss'\r\n\r\nconst Circle = ({ color, onClick, className }) => (\r\n  <i\r\n    onClick={onClick}\r\n    className={classNames(\r\n      'circle',\r\n      { [`  circle circle__${color}`]: color },\r\n      className\r\n    )}\r\n  ></i>\r\n)\r\n\r\nexport default Circle\r\n","import React from 'react'\r\nimport classNames from 'classnames'\r\nimport axios from 'axios'\r\n\r\nimport removeSvg from '../../assets/img/remove24.svg'\r\n\r\nimport Circle from '../Circle/index'\r\n\r\nimport './list.scss'\r\n\r\nconst List = ({\r\n  items,\r\n  isRemovable,\r\n  onClick,\r\n  onRemove,\r\n  onClickItem,\r\n  activeItem,\r\n}) => {\r\n  const removeList = (item) => {\r\n    if (window.confirm('Реально?')) {\r\n      axios.delete('http://localhost:3001/lists/' + item.id).then(() => {\r\n        onRemove(item.id)\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ul onClick={onClick} className=\"list\">\r\n      {items.map((item, index) => (\r\n        <li\r\n          key={index}\r\n          className={classNames(item.className, {\r\n            active: item.active\r\n              ? item.active\r\n              : activeItem && activeItem.id === item.id,\r\n          })}\r\n          onClick={onClickItem ? () => onClickItem(item) : null}\r\n        >\r\n          <i>{item.icon ? item.icon : <Circle color={item.color.name} />}</i>\r\n          <span>\r\n            {item.name}\r\n            {item.tasks && `   (${item.tasks.length})                 `}\r\n          </span>\r\n          {isRemovable && (\r\n            <img\r\n              className=\"list__remove\"\r\n              src={removeSvg}\r\n              alt=\"delete\"\r\n              onClick={() => removeList(item)}\r\n            />\r\n          )}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default List\r\n","export default __webpack_public_path__ + \"static/media/plus24.93043b6e.svg\";","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport List from '../List/index'\r\n\r\nimport addSvg from '/project/1/todo-app/src/assets/img/plus24.svg'\r\n\r\nimport Circle from '../Circle/index'\r\n\r\nimport './AddListButton.scss'\r\n\r\nconst AddListButton = ({ colors, onAdd }) => {\r\n  const [visiblePopup, setVisiblePopup] = useState(false)\r\n  const [selectColor, setSelectColor] = useState(3)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(colors)) {\r\n      setSelectColor(colors[0].id)\r\n    }\r\n  }, [colors])\r\n\r\n  const onClose = () => {\r\n    setVisiblePopup(false)\r\n    setInputValue('')\r\n    setSelectColor(colors[0].id)\r\n  }\r\n  const addList = () => {\r\n    if (!inputValue) {\r\n      alert('Пустое поле')\r\n      return\r\n    }\r\n    setIsLoading(true)\r\n    axios\r\n      .post('http://localhost:3001/lists', {\r\n        name: inputValue,\r\n        colorId: selectColor,\r\n      })\r\n      .then(({ data }) => {\r\n        const color = colors.filter((c) => c.id === selectColor)[0]\r\n        const listObj = {\r\n          ...data,\r\n          color: { name: color.name, hex: color.hex },\r\n          tasks: [],\r\n        }\r\n        onAdd(listObj)\r\n        onClose()\r\n      })\r\n      .catch(() => {\r\n        alert('Ошибка')\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <List\r\n        onClick={() => setVisiblePopup(!visiblePopup)}\r\n        items={[\r\n          {\r\n            className: 'list__bottomAdd',\r\n            icon: <img src={addSvg} alt=\"plus\" />,\r\n            name: 'Добавить список',\r\n          },\r\n        ]}\r\n      />\r\n      {visiblePopup && (\r\n        <div className=\"add-list-popup \">\r\n          <svg\r\n            onClick={onClose}\r\n            className=\"add-list-popup__close\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            height=\"20px\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"20px\"\r\n            fill=\"#000\"\r\n          >\r\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n            <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\" />\r\n          </svg>\r\n          <input\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            className=\"field\"\r\n            type=\"text\"\r\n            placeholder=\"Название папки\"\r\n          />\r\n          <div className=\"add-list-popup__colors\">\r\n            <ul>\r\n              <li>\r\n                {colors.map((color) => (\r\n                  <Circle\r\n                    onClick={() => setSelectColor(color.id)}\r\n                    key={color.id}\r\n                    color={color.name}\r\n                    className={selectColor === color.id && 'active'}\r\n                  />\r\n                ))}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <button onClick={addList} className=\"button\">\r\n            {isLoading ? 'Добавление...' : 'Добавить'}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddListButton\r\n","export default __webpack_public_path__ + \"static/media/edit24p.d1af3034.svg\";","export default __webpack_public_path__ + \"static/media/plus24.93043b6e.svg\";","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport addSvg from '../../assets/img/plus24.svg'\r\n\r\nconst AddTaskForm = ({ list, onAddTask }) => {\r\n  const [visibleForm, setVisibleForm] = useState(false)\r\n  const [inputValue, setInputValue] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const toggleFormVisible = () => {\r\n    setVisibleForm(!visibleForm)\r\n    setInputValue('')\r\n  }\r\n\r\n  const addTask = () => {\r\n    const obj = {\r\n      listId: list.id,\r\n      text: inputValue,\r\n      completed: false,\r\n    }\r\n    setIsLoading(true)\r\n    axios\r\n      .post('http://localhost:3001/tasks/', obj)\r\n      .then(({ data }) => {\r\n        onAddTask(list.id, data)\r\n        toggleFormVisible()\r\n      })\r\n      .catch(() => {\r\n        alert('Ошибка')\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"tasks__form\">\r\n        {!visibleForm ? (\r\n          <div onClick={toggleFormVisible} className=\"tasks__form-new\">\r\n            <img src={addSvg} alt=\"plus\" />\r\n            <span> Новая задача</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"tasks__form-block\">\r\n            <input\r\n              value={inputValue}\r\n              className=\"field field-tasks\"\r\n              type=\"text\"\r\n              placeholder=\"Текст задачи\"\r\n              onChange={(e) => setInputValue(e.target.value)}\r\n            />\r\n            <button\r\n              disabled={isLoading}\r\n              onClick={addTask}\r\n              className=\"button button--add\"\r\n            >\r\n              {isLoading ? 'Добавление...' : 'Добавить задачу'}\r\n            </button>\r\n            <button\r\n              onClick={toggleFormVisible}\r\n              className=\"button button--cancel\"\r\n            >\r\n              Отмена\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddTaskForm\r\n","import React from 'react'\r\n\r\nimport removeSvg from '../../assets/img/remove24.svg'\r\nimport editSvg from '../../assets/img/edit24p.svg'\r\n\r\nfunction Task({ task, onRemove, onEdit, list, onComplete }) {\r\n  const onChangeCheckBox = (e) => {\r\n    onComplete(list.id, task.id, e.target.checked)\r\n  }\r\n  return (\r\n    <div key={task.id} className=\"tasks__items-row\">\r\n      <div className=\"checkbox\">\r\n        <input\r\n          onChange={onChangeCheckBox}\r\n          id={`task-${task.id}`}\r\n          type=\"checkbox\"\r\n          checked={task.completed}\r\n        />\r\n        <label htmlFor={`task-${task.id}`}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            height=\"18px\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"18px\"\r\n            fill=\"#000000\"\r\n          >\r\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n            <path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\" />\r\n          </svg>\r\n        </label>\r\n      </div>\r\n      <p>{task.text}</p>\r\n      <img\r\n        onClick={() => onEdit(list.id, task.id, task.text)}\r\n        className=\"tasks__items-row-edit\"\r\n        src={editSvg}\r\n        alt=\"remove\"\r\n      ></img>\r\n      <img\r\n        onClick={() => onRemove(list.id, task.id)}\r\n        className=\"tasks__items-row-remove\"\r\n        src={removeSvg}\r\n        alt=\"delete\"\r\n      ></img>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport editSvg from '../../assets/img/edit24p.svg'\r\n\r\nimport './Tasks.scss'\r\n\r\nimport AddTaskForm from './AddTaskForm'\r\nimport Task from './Task'\r\n\r\nconst Tasks = ({\r\n  list,\r\n  onEditTitle,\r\n  onAddTask,\r\n  withOutEmpty,\r\n  onRemoveTask,\r\n  onEditTask,\r\n  onCompleteTask,\r\n  navigate,\r\n}) => {\r\n  const editTitle = () => {\r\n    const newTitle = window.prompt('Название списка', list.name)\r\n    if (newTitle) {\r\n      onEditTitle(list.id, newTitle)\r\n      axios\r\n        .patch('http://localhost:3001/lists/' + list.id, {\r\n          name: newTitle,\r\n        })\r\n        .catch(() => {\r\n          alert('Ошибка')\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"tasks\">\r\n        <Link to={'/lists/' + list.id}>\r\n          <h2 style={{ color: list.color.hex }} className=\"tasks__title\">\r\n            {list.name}\r\n            <img onClick={editTitle} src={editSvg} alt=\"Edit icon\" />\r\n          </h2>\r\n        </Link>\r\n      </div>\r\n      <div className=\"tasks__items\">\r\n        {!withOutEmpty && list.tasks && !list.tasks.length && (\r\n          <h2>Задачи отсутствуют</h2>\r\n        )}\r\n        {list.tasks &&\r\n          list.tasks.map((item) => (\r\n            <Task\r\n              key={item.id}\r\n              onEdit={onEditTask}\r\n              onRemove={onRemoveTask}\r\n              onComplete={onCompleteTask}\r\n              task={item}\r\n              list={list}\r\n            />\r\n          ))}\r\n\r\n        <AddTaskForm key={list.id} list={list} onAddTask={onAddTask} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","export default __webpack_public_path__ + \"static/media/subject_black_24dp.e643ec18.svg\";","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Route, Routes, useNavigate } from 'react-router-dom'\n\nimport { List, AddListButton, Tasks } from './components/index'\n\nimport listSvg from './assets/img/subject_black_24dp.svg'\n\nfunction App() {\n  const [lists, setLists] = useState(null)\n  const [colors, setColors] = useState(null)\n  const [activeItem, setActiveItem] = useState(null)\n  const [href, setHref] = useState('')\n  let navigate = useNavigate()\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:3001/lists?_expand=color&_embed=tasks')\n      .then(({ data }) => {\n        setLists(data)\n      })\n    axios.get('http://localhost:3001/colors').then(({ data }) => {\n      setColors(data)\n    })\n  }, [])\n\n  const onAddList = (obj) => {\n    const newList = [...lists, obj]\n    setLists(newList)\n  }\n  const onAddTask = (listId, taskObj) => {\n    const newList = lists.map((item) => {\n      if (item.id === listId) {\n        item.tasks = [...item.tasks, taskObj]\n      }\n      return item\n    })\n    setLists(newList)\n  }\n  const onEditListTitle = (id, title) => {\n    const newList = lists.map((item) => {\n      if (item.id === id) {\n        item.name = title\n      }\n      return item\n    })\n    setLists(newList)\n  }\n  const onEditTask = (listId, taskId, taskText) => {\n    const newTaskText = window.prompt('Текст задачи', taskText)\n    if (!newTaskText) {\n      return\n    }\n    const newList = lists.map((item) => {\n      if (item.id === listId) {\n        item.tasks = item.tasks.map((task) => {\n          if (task.id === taskId) {\n            task.text = newTaskText\n          }\n          return task\n        })\n      }\n      return item\n    })\n    setLists(newList)\n    axios\n      .patch('http://localhost:3001/tasks/' + taskId, { text: newTaskText })\n      .catch(() => {\n        alert('Ошибка')\n      })\n  }\n  const onRemoveTask = (listId, taskId) => {\n    if (window.confirm('Реально?')) {\n      const newList = lists.map((item) => {\n        if (item.id === listId) {\n          item.tasks = item.tasks.filter((task) => task.id !== taskId)\n        }\n        return item\n      })\n      setLists(newList)\n      axios.delete('http://localhost:3001/tasks/' + taskId).catch(() => {\n        alert('Ошибка')\n      })\n    }\n  }\n  const onCompleteTask = (listId, taskId, completed) => {\n    const newList = lists.map((item) => {\n      if (item.id === listId) {\n        item.tasks = item.tasks.map((task) => {\n          if (task.id === taskId) {\n            task.completed = completed\n          }\n          return task\n        })\n      }\n      return item\n    })\n    setLists(newList)\n    axios\n      .patch('http://localhost:3001/tasks/' + taskId, { completed })\n      .catch(() => {\n        alert('Ошибка')\n      })\n  }\n\n  useEffect(() => {\n    if (lists) {\n      const list = lists.find((list) => list.id === Number(href))\n      setActiveItem(list)\n    }\n  }, [href])\n\n  return (\n    <div className=\"todo\">\n      <div className=\"todo__sidebar\">\n        <List\n          onClickItem={(item) => {\n            navigate('/')\n            setHref(item.id)\n          }}\n          items={[\n            {\n              icon: <img src={listSvg} alt=\"listicon\" />,\n              name: 'Все задачи',\n              active: !activeItem,\n            },\n          ]}\n        />\n\n        {lists ? (\n          <List\n            items={lists}\n            onRemove={(id) => {\n              const newLists = lists.filter((item) => item.id !== id)\n              setLists(newLists)\n            }}\n            onClickItem={(item) => {\n              navigate('/lists/' + item.id)\n              setHref(item.id)\n            }}\n            activeItem={activeItem}\n            isRemovable\n          />\n        ) : (\n          'Загрузка...'\n        )}\n        <AddListButton onAdd={onAddList} colors={colors} />\n      </div>\n      <div className=\"todo__tasks\">\n        <Routes>\n          <Route\n            exact\n            path=\"/\"\n            element={\n              lists &&\n              lists.map((list) => (\n                <Tasks\n                  key={list.id}\n                  list={list}\n                  onAddTask={onAddTask}\n                  onEditTitle={onEditListTitle}\n                  onRemoveTask={onRemoveTask}\n                  onEditTask={onEditTask}\n                  onCompleteTask={onCompleteTask}\n                  withOutEmpty\n                />\n              ))\n            }\n          ></Route>\n\n          <Route\n            path={'/lists/' + href}\n            element={\n              lists &&\n              activeItem && (\n                <Tasks\n                  list={activeItem}\n                  onAddTask={onAddTask}\n                  onEditTitle={onEditListTitle}\n                  onRemoveTask={onRemoveTask}\n                  onEditTask={onEditTask}\n                  onCompleteTask={onCompleteTask}\n                />\n              )\n            }\n          ></Route>\n        </Routes>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport './index.scss'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}